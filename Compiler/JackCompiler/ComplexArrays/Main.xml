<class>
	<keyword>class</keyword>
	<identifier>Main</identifier>
	<symbol>{</symbol>
	<subroutineDec>
		<keyword>void</keyword>
		<identifier>main</identifier>
		<parameterList>
			<symbol>(</symbol>
			<symbol>)</symbol>
		</parameterList>
		<symbol>{</symbol>
		<subroutineBody>
			<varDec>
				<identifier>Array</identifier>
				<identifier>a</identifier>
				<symbol>,</symbol>
				<identifier>b</identifier>
				<symbol>,</symbol>
				<identifier>c</identifier>
				<symbol>;</symbol>
			</varDec>
			<statements>
				<letStatement>
					<keyword>let</keyword>
					<identifier>a</identifier>
					<symbol>=</symbol>
					<expression>
						<term>
							<subroutineCall>
								<identifier>Array</identifier>
								<symbol>.</symbol>
								<identifier>new</identifier>
								<symbol>(</symbol>
								<expressionList>
									<expression>
										<term>
											<integerConstant>10</integerConstant>
										</term>
									</expression>
								</expressionList>
								<symbol>)</symbol>
							</subroutineCall>
						</term>
					</expression>
				</letStatement>
				<letStatement>
					<keyword>let</keyword>
					<identifier>b</identifier>
					<symbol>=</symbol>
					<expression>
						<term>
							<subroutineCall>
								<identifier>Array</identifier>
								<symbol>.</symbol>
								<identifier>new</identifier>
								<symbol>(</symbol>
								<expressionList>
									<expression>
										<term>
											<integerConstant>5</integerConstant>
										</term>
									</expression>
								</expressionList>
								<symbol>)</symbol>
							</subroutineCall>
						</term>
					</expression>
				</letStatement>
				<letStatement>
					<keyword>let</keyword>
					<identifier>c</identifier>
					<symbol>=</symbol>
					<expression>
						<term>
							<subroutineCall>
								<identifier>Array</identifier>
								<symbol>.</symbol>
								<identifier>new</identifier>
								<symbol>(</symbol>
								<expressionList>
									<expression>
										<term>
											<integerConstant>1</integerConstant>
										</term>
									</expression>
								</expressionList>
								<symbol>)</symbol>
							</subroutineCall>
						</term>
					</expression>
				</letStatement>
				<letStatement>
					<keyword>let</keyword>
					<identifier>a</identifier>
					<symbol>[</symbol>
					<expression>
						<term>
							<integerConstant>3</integerConstant>
						</term>
					</expression>
					<symbol>]</symbol>
					<symbol>=</symbol>
					<expression>
						<term>
							<integerConstant>2</integerConstant>
						</term>
					</expression>
				</letStatement>
				<letStatement>
					<keyword>let</keyword>
					<identifier>a</identifier>
					<symbol>[</symbol>
					<expression>
						<term>
							<integerConstant>4</integerConstant>
						</term>
					</expression>
					<symbol>]</symbol>
					<symbol>=</symbol>
					<expression>
						<term>
							<integerConstant>8</integerConstant>
						</term>
					</expression>
				</letStatement>
				<letStatement>
					<keyword>let</keyword>
					<identifier>a</identifier>
					<symbol>[</symbol>
					<expression>
						<term>
							<integerConstant>5</integerConstant>
						</term>
					</expression>
					<symbol>]</symbol>
					<symbol>=</symbol>
					<expression>
						<term>
							<integerConstant>4</integerConstant>
						</term>
					</expression>
				</letStatement>
				<letStatement>
					<keyword>let</keyword>
					<identifier>b</identifier>
					<symbol>[</symbol>
					<expression>
						<term>
							<identifier>a</identifier>
							<symbol>[</symbol>
							<expression>
								<term>
									<integerConstant>3</integerConstant>
								</term>
							</expression>
							<symbol>]</symbol>
						</term>
					</expression>
					<symbol>]</symbol>
					<symbol>=</symbol>
					<expression>
						<term>
							<identifier>a</identifier>
							<symbol>[</symbol>
							<expression>
								<term>
									<integerConstant>3</integerConstant>
								</term>
							</expression>
							<symbol>]</symbol>
						</term>
						<symbol>+</symbol>
						<term>
							<integerConstant>3</integerConstant>
						</term>
					</expression>
				</letStatement>
				<letStatement>
					<keyword>let</keyword>
					<identifier>a</identifier>
					<symbol>[</symbol>
					<expression>
						<term>
							<identifier>b</identifier>
							<symbol>[</symbol>
							<expression>
								<term>
									<identifier>a</identifier>
									<symbol>[</symbol>
									<expression>
										<term>
											<integerConstant>3</integerConstant>
										</term>
									</expression>
									<symbol>]</symbol>
								</term>
							</expression>
							<symbol>]</symbol>
						</term>
					</expression>
					<symbol>]</symbol>
					<symbol>=</symbol>
					<expression>
						<term>
							<identifier>a</identifier>
							<symbol>[</symbol>
							<expression>
								<term>
									<identifier>a</identifier>
									<symbol>[</symbol>
									<expression>
										<term>
											<integerConstant>5</integerConstant>
										</term>
									</expression>
									<symbol>]</symbol>
								</term>
							</expression>
							<symbol>]</symbol>
						</term>
						<symbol>*</symbol>
						<term>
							<identifier>b</identifier>
							<symbol>[</symbol>
							<expression>
								<term>
									<expression>
										<term>
											<expression>
												<term>
													<integerConstant>7</integerConstant>
												</term>
												<symbol>-</symbol>
												<term>
													<identifier>a</identifier>
													<symbol>[</symbol>
													<expression>
														<term>
															<integerConstant>3</integerConstant>
														</term>
													</expression>
													<symbol>]</symbol>
												</term>
											</expression>
											<symbol>)</symbol>
										</term>
										<symbol>-</symbol>
										<term>
											<subroutineCall>
												<identifier>Main</identifier>
												<symbol>.</symbol>
												<identifier>double</identifier>
												<symbol>(</symbol>
												<expressionList>
													<expression>
														<term>
															<integerConstant>2</integerConstant>
														</term>
													</expression>
												</expressionList>
												<symbol>)</symbol>
											</subroutineCall>
										</term>
									</expression>
									<symbol>)</symbol>
								</term>
								<symbol>+</symbol>
								<term>
									<integerConstant>1</integerConstant>
								</term>
							</expression>
							<symbol>]</symbol>
						</term>
					</expression>
				</letStatement>
				<letStatement>
					<keyword>let</keyword>
					<identifier>c</identifier>
					<symbol>[</symbol>
					<expression>
						<term>
							<integerConstant>0</integerConstant>
						</term>
					</expression>
					<symbol>]</symbol>
					<symbol>=</symbol>
					<expression>
						<term>
							<keyword>null</keyword>
						</term>
					</expression>
				</letStatement>
				<letStatement>
					<keyword>let</keyword>
					<identifier>c</identifier>
					<symbol>=</symbol>
					<expression>
						<term>
							<identifier>c</identifier>
							<symbol>[</symbol>
							<expression>
								<term>
									<integerConstant>0</integerConstant>
								</term>
							</expression>
							<symbol>]</symbol>
						</term>
					</expression>
				</letStatement>
				<doStatement>
					<keyword>do</keyword>
					<subroutineCall>
						<identifier>Output</identifier>
						<symbol>.</symbol>
						<identifier>printString</identifier>
						<symbol>(</symbol>
						<expressionList>
							<expression>
								<term>
									<StringConstant>Test 1: expected result: 5; actual result: </StringConstant>
								</term>
							</expression>
						</expressionList>
						<symbol>)</symbol>
					</subroutineCall>
					<symbol>;</symbol>
				</doStatement>
				<doStatement>
					<keyword>do</keyword>
					<subroutineCall>
						<identifier>Output</identifier>
						<symbol>.</symbol>
						<identifier>printInt</identifier>
						<symbol>(</symbol>
						<expressionList>
							<expression>
								<term>
									<identifier>b</identifier>
									<symbol>[</symbol>
									<expression>
										<term>
											<integerConstant>2</integerConstant>
										</term>
									</expression>
									<symbol>]</symbol>
								</term>
							</expression>
						</expressionList>
						<symbol>)</symbol>
					</subroutineCall>
					<symbol>;</symbol>
				</doStatement>
				<doStatement>
					<keyword>do</keyword>
					<subroutineCall>
						<identifier>Output</identifier>
						<symbol>.</symbol>
						<identifier>println</identifier>
						<symbol>(</symbol>
						<symbol>)</symbol>
					</subroutineCall>
					<symbol>;</symbol>
				</doStatement>
				<doStatement>
					<keyword>do</keyword>
					<subroutineCall>
						<identifier>Output</identifier>
						<symbol>.</symbol>
						<identifier>printString</identifier>
						<symbol>(</symbol>
						<expressionList>
							<expression>
								<term>
									<StringConstant>Test 2: expected result: 40; actual result: </StringConstant>
								</term>
							</expression>
						</expressionList>
						<symbol>)</symbol>
					</subroutineCall>
					<symbol>;</symbol>
				</doStatement>
				<doStatement>
					<keyword>do</keyword>
					<subroutineCall>
						<identifier>Output</identifier>
						<symbol>.</symbol>
						<identifier>printInt</identifier>
						<symbol>(</symbol>
						<expressionList>
							<expression>
								<term>
									<identifier>a</identifier>
									<symbol>[</symbol>
									<expression>
										<term>
											<integerConstant>5</integerConstant>
										</term>
									</expression>
									<symbol>]</symbol>
								</term>
							</expression>
						</expressionList>
						<symbol>)</symbol>
					</subroutineCall>
					<symbol>;</symbol>
				</doStatement>
				<doStatement>
					<keyword>do</keyword>
					<subroutineCall>
						<identifier>Output</identifier>
						<symbol>.</symbol>
						<identifier>println</identifier>
						<symbol>(</symbol>
						<symbol>)</symbol>
					</subroutineCall>
					<symbol>;</symbol>
				</doStatement>
				<doStatement>
					<keyword>do</keyword>
					<subroutineCall>
						<identifier>Output</identifier>
						<symbol>.</symbol>
						<identifier>printString</identifier>
						<symbol>(</symbol>
						<expressionList>
							<expression>
								<term>
									<StringConstant>Test 3: expected result: 0; actual result: </StringConstant>
								</term>
							</expression>
						</expressionList>
						<symbol>)</symbol>
					</subroutineCall>
					<symbol>;</symbol>
				</doStatement>
				<doStatement>
					<keyword>do</keyword>
					<subroutineCall>
						<identifier>Output</identifier>
						<symbol>.</symbol>
						<identifier>printInt</identifier>
						<symbol>(</symbol>
						<expressionList>
							<expression>
								<term>
									<identifier>c</identifier>
								</term>
							</expression>
						</expressionList>
						<symbol>)</symbol>
					</subroutineCall>
					<symbol>;</symbol>
				</doStatement>
				<doStatement>
					<keyword>do</keyword>
					<subroutineCall>
						<identifier>Output</identifier>
						<symbol>.</symbol>
						<identifier>println</identifier>
						<symbol>(</symbol>
						<symbol>)</symbol>
					</subroutineCall>
					<symbol>;</symbol>
				</doStatement>
				<letStatement>
					<keyword>let</keyword>
					<identifier>c</identifier>
					<symbol>=</symbol>
					<expression>
						<term>
							<keyword>null</keyword>
						</term>
					</expression>
				</letStatement>
				<ifStatement>
					<keyword>if</keyword>
					<symbol>(</symbol>
					<expression>
						<term>
							<identifier>c</identifier>
						</term>
						<symbol>=</symbol>
						<term>
							<keyword>null</keyword>
						</term>
					</expression>
					<symbol>)</symbol>
					<symbol>{</symbol>
					<statements>
						<doStatement>
							<keyword>do</keyword>
							<subroutineCall>
								<identifier>Main</identifier>
								<symbol>.</symbol>
								<identifier>fill</identifier>
								<symbol>(</symbol>
								<expressionList>
									<expression>
										<term>
											<identifier>a</identifier>
										</term>
									</expression>
									<symbol>,</symbol>
									<expression>
										<term>
											<integerConstant>10</integerConstant>
										</term>
									</expression>
								</expressionList>
								<symbol>)</symbol>
							</subroutineCall>
							<symbol>;</symbol>
						</doStatement>
						<letStatement>
							<keyword>let</keyword>
							<identifier>c</identifier>
							<symbol>=</symbol>
							<expression>
								<term>
									<identifier>a</identifier>
									<symbol>[</symbol>
									<expression>
										<term>
											<integerConstant>3</integerConstant>
										</term>
									</expression>
									<symbol>]</symbol>
								</term>
							</expression>
						</letStatement>
						<letStatement>
							<keyword>let</keyword>
							<identifier>c</identifier>
							<symbol>[</symbol>
							<expression>
								<term>
									<integerConstant>1</integerConstant>
								</term>
							</expression>
							<symbol>]</symbol>
							<symbol>=</symbol>
							<expression>
								<term>
									<integerConstant>33</integerConstant>
								</term>
							</expression>
						</letStatement>
						<letStatement>
							<keyword>let</keyword>
							<identifier>c</identifier>
							<symbol>=</symbol>
							<expression>
								<term>
									<identifier>a</identifier>
									<symbol>[</symbol>
									<expression>
										<term>
											<integerConstant>7</integerConstant>
										</term>
									</expression>
									<symbol>]</symbol>
								</term>
							</expression>
						</letStatement>
						<letStatement>
							<keyword>let</keyword>
							<identifier>c</identifier>
							<symbol>[</symbol>
							<expression>
								<term>
									<integerConstant>1</integerConstant>
								</term>
							</expression>
							<symbol>]</symbol>
							<symbol>=</symbol>
							<expression>
								<term>
									<integerConstant>77</integerConstant>
								</term>
							</expression>
						</letStatement>
						<letStatement>
							<keyword>let</keyword>
							<identifier>b</identifier>
							<symbol>=</symbol>
							<expression>
								<term>
									<identifier>a</identifier>
									<symbol>[</symbol>
									<expression>
										<term>
											<integerConstant>3</integerConstant>
										</term>
									</expression>
									<symbol>]</symbol>
								</term>
							</expression>
						</letStatement>
						<letStatement>
							<keyword>let</keyword>
							<identifier>b</identifier>
							<symbol>[</symbol>
							<expression>
								<term>
									<integerConstant>1</integerConstant>
								</term>
							</expression>
							<symbol>]</symbol>
							<symbol>=</symbol>
							<expression>
								<term>
									<identifier>b</identifier>
									<symbol>[</symbol>
									<expression>
										<term>
											<integerConstant>1</integerConstant>
										</term>
									</expression>
									<symbol>]</symbol>
								</term>
								<symbol>+</symbol>
								<term>
									<identifier>c</identifier>
									<symbol>[</symbol>
									<expression>
										<term>
											<integerConstant>1</integerConstant>
										</term>
									</expression>
									<symbol>]</symbol>
								</term>
							</expression>
						</letStatement>
					</statements>
					<symbol>}</symbol>
				</ifStatement>
				<doStatement>
					<keyword>do</keyword>
					<subroutineCall>
						<identifier>Output</identifier>
						<symbol>.</symbol>
						<identifier>printString</identifier>
						<symbol>(</symbol>
						<expressionList>
							<expression>
								<term>
									<StringConstant>Test 4: expected result: 77; actual result: </StringConstant>
								</term>
							</expression>
						</expressionList>
						<symbol>)</symbol>
					</subroutineCall>
					<symbol>;</symbol>
				</doStatement>
				<doStatement>
					<keyword>do</keyword>
					<subroutineCall>
						<identifier>Output</identifier>
						<symbol>.</symbol>
						<identifier>printInt</identifier>
						<symbol>(</symbol>
						<expressionList>
							<expression>
								<term>
									<identifier>c</identifier>
									<symbol>[</symbol>
									<expression>
										<term>
											<integerConstant>1</integerConstant>
										</term>
									</expression>
									<symbol>]</symbol>
								</term>
							</expression>
						</expressionList>
						<symbol>)</symbol>
					</subroutineCall>
					<symbol>;</symbol>
				</doStatement>
				<doStatement>
					<keyword>do</keyword>
					<subroutineCall>
						<identifier>Output</identifier>
						<symbol>.</symbol>
						<identifier>println</identifier>
						<symbol>(</symbol>
						<symbol>)</symbol>
					</subroutineCall>
					<symbol>;</symbol>
				</doStatement>
				<doStatement>
					<keyword>do</keyword>
					<subroutineCall>
						<identifier>Output</identifier>
						<symbol>.</symbol>
						<identifier>printString</identifier>
						<symbol>(</symbol>
						<expressionList>
							<expression>
								<term>
									<StringConstant>Test 5: expected result: 110; actual result: </StringConstant>
								</term>
							</expression>
						</expressionList>
						<symbol>)</symbol>
					</subroutineCall>
					<symbol>;</symbol>
				</doStatement>
				<doStatement>
					<keyword>do</keyword>
					<subroutineCall>
						<identifier>Output</identifier>
						<symbol>.</symbol>
						<identifier>printInt</identifier>
						<symbol>(</symbol>
						<expressionList>
							<expression>
								<term>
									<identifier>b</identifier>
									<symbol>[</symbol>
									<expression>
										<term>
											<integerConstant>1</integerConstant>
										</term>
									</expression>
									<symbol>]</symbol>
								</term>
							</expression>
						</expressionList>
						<symbol>)</symbol>
					</subroutineCall>
					<symbol>;</symbol>
				</doStatement>
				<doStatement>
					<keyword>do</keyword>
					<subroutineCall>
						<identifier>Output</identifier>
						<symbol>.</symbol>
						<identifier>println</identifier>
						<symbol>(</symbol>
						<symbol>)</symbol>
					</subroutineCall>
					<symbol>;</symbol>
				</doStatement>
				<returnStatement>
					<keyword>return</keyword>
					<symbol>;</symbol>
				</returnStatement>
			</statements>
		</subroutineBody>
		<symbol>}</symbol>
	</subroutineDec>
	<subroutineDec>
		<keyword>int</keyword>
		<identifier>double</identifier>
		<parameterList>
			<symbol>(</symbol>
			<keyword>int</keyword>
			<identifier>a</identifier>
			<symbol>)</symbol>
		</parameterList>
		<symbol>{</symbol>
		<subroutineBody>
			<statements>
				<returnStatement>
					<keyword>return</keyword>
					<expression>
						<term>
							<identifier>a</identifier>
						</term>
						<symbol>*</symbol>
						<term>
							<integerConstant>2</integerConstant>
						</term>
					</expression>
					<symbol>;</symbol>
				</returnStatement>
			</statements>
		</subroutineBody>
		<symbol>}</symbol>
	</subroutineDec>
	<subroutineDec>
		<keyword>void</keyword>
		<identifier>fill</identifier>
		<parameterList>
			<symbol>(</symbol>
			<identifier>Array</identifier>
			<identifier>a</identifier>
			<symbol>,</symbol>
			<keyword>int</keyword>
			<identifier>size</identifier>
			<symbol>)</symbol>
		</parameterList>
		<symbol>{</symbol>
		<subroutineBody>
			<statements>
				<whileStatement>
					<keyword>while</keyword>
					<symbol>(</symbol>
					<expression>
						<term>
							<identifier>size</identifier>
						</term>
						<symbol>_GT_</symbol>
						<term>
							<integerConstant>0</integerConstant>
						</term>
					</expression>
					<symbol>)</symbol>
					<symbol>{</symbol>
					<statements>
						<letStatement>
							<keyword>let</keyword>
							<identifier>size</identifier>
							<symbol>=</symbol>
							<expression>
								<term>
									<identifier>size</identifier>
								</term>
								<symbol>-</symbol>
								<term>
									<integerConstant>1</integerConstant>
								</term>
							</expression>
						</letStatement>
						<letStatement>
							<keyword>let</keyword>
							<identifier>a</identifier>
							<symbol>[</symbol>
							<expression>
								<term>
									<identifier>size</identifier>
								</term>
							</expression>
							<symbol>]</symbol>
							<symbol>=</symbol>
							<expression>
								<term>
									<subroutineCall>
										<identifier>Array</identifier>
										<symbol>.</symbol>
										<identifier>new</identifier>
										<symbol>(</symbol>
										<expressionList>
											<expression>
												<term>
													<integerConstant>3</integerConstant>
												</term>
											</expression>
										</expressionList>
										<symbol>)</symbol>
									</subroutineCall>
								</term>
							</expression>
						</letStatement>
					</statements>
					<symbol>}</symbol>
				</whileStatement>
				<returnStatement>
					<keyword>return</keyword>
					<symbol>;</symbol>
				</returnStatement>
			</statements>
		</subroutineBody>
		<symbol>}</symbol>
	</subroutineDec>
	<symbol>}</symbol>
</class>
